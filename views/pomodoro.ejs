<!DOCTYPE html>
<html lang="en" class="light-style layout-menu-fixed" dir="ltr" data-theme="theme-default" data-assets-path="../assets/"
  data-template="vertical-menu-template-free">

<head>
  <meta charset="utf-8" />
  <meta name="viewport"
    content="width=device-width, initial-scale=1.0, user-scalable=no, minimum-scale=1.0, maximum-scale=1.0" />

  <title>Pomodoro Timer - ADHShe</title>

  <meta name="description" content="" />

  <!-- Favicon -->
  <link rel="icon" type="image/x-icon" href="../adhshe_icon.png" />

  <!-- Fonts -->
  <link rel="preconnect" href="https://fonts.googleapis.com" />
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
  <link
    href="https://fonts.googleapis.com/css2?family=Public+Sans:ital,wght@0,300;0,400;0,500;0,600;0,700;1,300;1,400;1,500;1,600;1,700&display=swap"
    rel="stylesheet" />

  <!-- Icons. Uncomment required icon fonts -->
  <link rel="stylesheet" href="../assets/vendor/fonts/boxicons.css" />

  <!-- Core CSS -->
  <link rel="stylesheet" href="../assets/vendor/css/core.css" class="template-customizer-core-css" />
  <link rel="stylesheet" href="../assets/vendor/css/theme-default.css" class="template-customizer-theme-css" />
  <link rel="stylesheet" href="../assets/css/demo.css" />

  <!-- Vendors CSS -->
  <link rel="stylesheet" href="../assets/vendor/libs/perfect-scrollbar/perfect-scrollbar.css" />

  <link rel="stylesheet" href="../assets/vendor/libs/apex-charts/apex-charts.css" />

  <!-- Page CSS -->

  <!-- Helpers -->
  <script src="../assets/vendor/js/helpers.js"></script>

  <!--! Template customizer & Theme config files MUST be included after core stylesheets and helpers.js in the <head> section -->
  <!--? Config:  Mandatory theme config file contain global vars & default theme options, Set your preferred theme option in this file.  -->
  <script src="../assets/js/config.js"></script>
</head>

<body>
  <!-- Layout wrapper -->
  <div class="layout-wrapper layout-content-navbar">
    <div class="layout-container">
      <!-- Menu -->

      <aside id="layout-menu" class="layout-menu menu-vertical menu bg-menu-theme">
        <div class="app-brand demo">
          <a href="index.html" class="app-brand-link">
            <span class="app-brand-logo demo">
              <img src="../adhshe_icon.png" id="app-brand-logo" style="width: 50px;">
            </span>
            <span class="app-brand-text demo menu-text fw-bolder ms-2" style="text-transform: none;">ADHShe</span>
          </a>

          <a href="javascript:void(0);" class="layout-menu-toggle menu-link text-large ms-auto d-block d-xl-none">
            <i class="bx bx-chevron-left bx-sm align-middle"></i>
          </a>
        </div>

        <div class="menu-inner-shadow"></div>

        <ul class="menu-inner py-1">
          <!-- Dashboard -->
          <li class="menu-item active">
            <a href="/index" class="menu-link">
              <i class="menu-icon tf-icons bx bx-home-circle"></i>
              <div data-i18n="Analytics">Dashboard</div>
            </a>
          </li>
          <li class="menu-item">
            <a href="/todo" class="menu-link">
              <i class="menu-icon tf-icons bx bx-list-check"></i>
              <div data-i18n="Analytics">To-Do List</div>
            </a>
          </li>
          <li class="menu-item">
            <a href="#" class="menu-link">
              <i class="menu-icon tf-icons bx bxs-heart-circle"></i>
              <div data-i18n="Analytics">Menstrual Cycle</div>
            </a>
          </li>
          <li class="menu-item">
            <a href="/pomodoro" class="menu-link">
              <i class="menu-icon tf-icons bx bxs-timer"></i>
              <div data-i18n="Analytics">Pomodoro Timer</div>
            </a>
          </li>
          <li class="menu-item">
            <a href="/community" class="menu-link">
              <i class="menu-icon tf-icons bx bx-group"></i>
              <div data-i18n="Analytics">Community Forum</div>
            </a>
          </li>
          <li class="menu-item">
            <a href="/happiness" class="menu-link">
              <i class="menu-icon tf-icons bx bx-smile"></i>
              <div data-i18n="Analytics">Mood Tracker</div>
            </a>
          </li>
          <li class="menu-item">
            <a href="/about1" class="menu-link">
              <i class="menu-icon tf-icons bx bxs-info-circle"></i>
              <div data-i18n="Analytics">About</div>
            </a>
          </li>
          <li class="menu-item">
            <a href="/aboutus" class="menu-link">
              <i class="menu-icon tf-icons bx bxs-store"></i>
              <div data-i18n="Analytics">Meet the developers</div>
            </a>
          </li>
         
        </ul>
      </aside>
      <!-- / Menu -->
 
      <!-- Layout container -->
      <div class="layout-page">
        <!-- Navbar -->
 
        <nav
          class="layout-navbar container-xxl navbar navbar-expand-xl navbar-detached align-items-center bg-navbar-theme"
          id="layout-navbar">
          <div class="layout-menu-toggle navbar-nav align-items-xl-center me-3 me-xl-0 d-xl-none">
            <a class="nav-item nav-link px-0 me-xl-4" href="javascript:void(0)">
              <i class="bx bx-menu bx-sm"></i>
            </a>
          </div>
 
          <div class="navbar-nav-right d-flex align-items-center" id="navbar-collapse">
            <!-- Search -->
            <div class="navbar-nav align-items-center">
              <div class="nav-item d-flex align-items-center">
                <span class="ms-2 text-primary fs-5 fw-bold">We help people with ADHD</span>
              </div>
            </div>
            <!-- /Search -->

            <ul class="navbar-nav flex-row align-items-center ms-auto">
              <!-- Place this tag where you want the button to render. -->

              <!-- User -->
              <li class="nav-item navbar-dropdown dropdown-user dropdown">
                <a class="nav-link dropdown-toggle hide-arrow" href="javascript:void(0);" data-bs-toggle="dropdown">
                  <div class="avatar avatar-online">
                    <img 
                      src="<%= profileImage ? '/' + profileImage : '../assets/img/avatars/no-image.png' %>" 
                      alt="user-avatar" 
                      class="w-px-40 h-auto rounded-circle" 
                    />
                  </div>
                  
                </a>
                <ul class="dropdown-menu dropdown-menu-end">
                  <li>
                    <a class="dropdown-item" href="#">
                      <div class="d-flex align-items-center">
                        <div class="flex-shrink-0 me-3">
                          <div class="avatar avatar-online">
                            <img src="<%= profileImage ? '/' + profileImage : '../assets/img/avatars/no-image.png' %>" alt class="w-px-40 h-auto rounded-circle" />
                          </div>
                        </div>
                          <span class="fw-semibold d-block"><%= firstname %></span>
                      </div>
                    </a>
                  </li>
                  <li>
                    <div class="dropdown-divider"></div>
                  </li>
                  <li>
                    <a class="dropdown-item" href="/profile">
                      <i class="bx bx-user me-2"></i>
                      <span class="align-middle">My Profile</span>
                    </a>
                  </li>
                  <li>
                    <a class="dropdown-item" href="#">
                      <i class="bx bx-cog me-2"></i>
                      <span class="align-middle">Settings</span>
                    </a>
                  </li>
                  <li>
                    <div class="dropdown-divider"></div>
                  </li>
                  <li>
                    <a class="dropdown-item" href="/logout">
                      <i class="bx bx-power-off me-2"></i>
                      <span class="align-middle">Log Out</span>
                    </a>
                  </li>
                </ul>
              </li>
              <!--/ User -->
            </ul>
          </div>
        </nav>

        <!-- / Navbar -->

        <!-- Content wrapper -->
        <div class="content-wrapper">
          <!-- Content -->
          <div class="container-xxl flex-grow-1 container-p-y">
            <div class="row">
              <div class="col-12">
                <div class="card">
                  <div class="card-body">
                    <h5 class="card-title text-primary">Pomodoro Timer</h5>
                    <form id="settings-form">
                      <div class="mb-3">
                        <label for="work-duration" class="form-label">Total Work Duration (minutes):</label>
                        <input type="number" class="form-control" id="work-duration" name="workDuration" value="50">
                      </div>
                      <div class="mb-3">
                        <label for="task-selection" class="form-label">Select Task:</label>
                        <select class="form-control" id="task-selection">
                          <!-- Options will be populated by JavaScript -->
                        </select>
                      </div>
                      <div class="text-center">
                        <button type="button" class="btn btn-primary" id="start-timer">Start</button>
                        <button type="button" class="btn btn-secondary" id="stop-timer">Stop</button>
                        <button type="button" class="btn btn-danger" id="reset-timer">Reset</button>
                      </div>
                    </form>
                  </div>
                  <div class="card-footer text-center">
                    <div id="progress-container" class="mb-3">
                      <svg id="progress-bar" width="150" height="150">
                        <circle cx="75" cy="75" r="70" stroke="#e6e6e6" stroke-width="5" fill="none" />
                        <circle id="progress" cx="75" cy="75" r="70" stroke="#007bff" stroke-width="5" fill="none"
                          stroke-dasharray="440" stroke-dashoffset="440" />
                      </svg>
                    </div>
                    <div id="timer-display" class="display-4">25:00</div>
                  </div>
                </div>
              </div>
            </div>
          </div>
          <!-- / Content -->

          <!-- Footer -->
          <footer class="content-footer footer bg-footer-theme">
            <div class="container-xxl d-flex flex-wrap justify-content-between py-2 flex-md-row flex-column">
              <div class="mb-2 mb-md-0">
                ©
                <script>
                  document.write(new Date().getFullYear());
                </script>
                , made with ❤️ by
                <a href="https://themeselection.com" target="_blank" class="footer-link fw-bolder">FrontEdge
                  Technologies</a>
              </div>
            </div>
          </footer>
          <!-- / Footer -->

          <div class="content-backdrop fade"></div>
        </div>
        <!-- Content wrapper -->
      </div>
      <!-- / Layout page -->
    </div>

    <!-- Overlay -->
    <div class="layout-overlay layout-menu-toggle"></div>
  </div>

  <!-- Core JS -->
  <!-- build:js assets/vendor/js/core.js -->
  <script src="../assets/vendor/libs/jquery/jquery.js"></script>
  <script src="../assets/vendor/libs/popper/popper.js"></script>
  <script src="../assets/vendor/js/bootstrap.js"></script>
  <script src="../assets/vendor/libs/perfect-scrollbar/perfect-scrollbar.js"></script>
  <script src="../assets/vendor/js/menu.js"></script>
  <!-- endbuild -->

  <!-- Vendors JS -->
  <script src="../assets/vendor/libs/apex-charts/apexcharts.js"></script>

  <!-- Main JS -->
  <script src="../assets/js/main.js"></script>

  <!-- Page JS -->
  <script src="../assets/js/dashboards-analytics.js"></script>

  <!-- Place this tag in your head or just before your close body tag. -->
  <script async defer src="https://buttons.github.io/buttons.js"></script>

  <!-- Pomodoro Timer Script -->
  <script>
    document.addEventListener('DOMContentLoaded', () => {
      const display = document.getElementById('timer-display');
      const workDurationInput = document.getElementById('work-duration');
      const taskSelection = document.getElementById('task-selection');
      const progress = document.getElementById('progress');
      let timerTime = 1500; // Starting time in seconds (25 minutes)
      let isRunning = false;
      let interval;
      let cycleCount = 0;
      let workTime = 1500; // 25 minutes
      let breakTime = 300; // 5 minutes
      let totalTimeSpent = 0; // Total time spent on task
      let startTime = null;

      function updateDisplay(time) {
        const minutes = Math.floor(time / 60);
        const seconds = time % 60;
        display.textContent = `${minutes}:${seconds < 10 ? '0' : ''}${seconds}`;
        updateProgressBar(time);
      }

      function updateProgressBar(time) {
        const total = workTime + breakTime;
        const progressValue = ((total - time) / total) * 440;
        progress.style.strokeDashoffset = 440 - progressValue;
      }

      async function updateTaskTime(taskId, timeSpent) {
        try {
          const response = await fetch(`/api/todos/${taskId}/time`, {
            method: 'PUT',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify({ timeSpent })
          });
          if (!response.ok) {
            throw new Error('Failed to update task time');
          }
        } catch (error) {
          console.error(error);
        }
      }

      function startTimer(duration, callback) {
        clearInterval(interval);
        let time = duration;
        startTime = Date.now();
        interval = setInterval(() => {
          time--;
          updateDisplay(time);
          if (time <= 0) {
            clearInterval(interval);
            callback();
          }
        }, 1000);
      }

      document.getElementById('start-timer').addEventListener('click', function () {
        if (!isRunning) {
          const totalWorkMinutes = parseInt(workDurationInput.value);
          const totalWorkSeconds = totalWorkMinutes * 60;
          cycleCount = Math.ceil(totalWorkSeconds / (workTime + breakTime));
          let currentCycle = 0;
          totalTimeSpent = 0;

          function workSession() {
            if (currentCycle < cycleCount) {
              startTimer(workTime, breakSession);
              currentCycle++;
            } else {
              alert('Total work duration completed!');
              isRunning = false;
              updateTaskTime(taskSelection.value, totalTimeSpent / 60);
            }
          }

          function breakSession() {
            alert('Time for a break!');
            startTimer(breakTime, workSession);
          }

          isRunning = true;
          workSession();
        }
      });

      document.getElementById('stop-timer').addEventListener('click', function () {
        clearInterval(interval);
        isRunning = false;
        const elapsedTime = Math.floor((Date.now() - startTime) / 1000);
        totalTimeSpent += elapsedTime;
        updateTaskTime(taskSelection.value, totalTimeSpent / 60);
      });

      document.getElementById('reset-timer').addEventListener('click', function () {
        clearInterval(interval);
        timerTime = workTime;
        updateDisplay(timerTime);
        isRunning = false;
        totalTimeSpent = 0;
      });

      async function fetchTasks() {
        try {
          const response = await fetch('/api/todos');
          const tasks = await response.json();
          taskSelection.innerHTML = '';
          tasks.forEach(task => {
            const option = document.createElement('option');
            option.value = task._id;
            option.textContent = task.text;
            taskSelection.appendChild(option);
          });
        } catch (error) {
          console.error('Error fetching tasks:', error);
        }
      }

      fetchTasks();

      // Initial display update
      updateDisplay(timerTime);
    });
  </script>
</body>

</html>
